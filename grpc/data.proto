// protoc -I grpc/ grpc/data.proto --go_out=plugins=grpc:grpc

syntax = "proto3";
package grpc;

// The gRPC common service definition.
service GrpcService {
    // Check grpc server liveness.
    rpc CheckGrpcServerLiveness(EmptyRequest) returns (stream LivenessResponse) {}

    // Get all exchange rates - A server-to-client streaming RPC.
    rpc GetExchangeRates(EmptyRequest) returns (stream ExchangeRatesResponse) {}

    // Get weather info - A server-to-client streaming RPC.
    rpc GetWeatherInfo(WeatherRequest) returns (stream WeatherResponse) {}
}

// https://github.com/google/protobuf/blob/master/src/google/protobuf/empty.proto
// https://stackoverflow.com/questions/31768665/can-i-define-a-grpc-call-with-a-null-request-or-response
// https://stackoverflow.com/questions/29687243/protobuf-rpc-service-method-without-parameters
// note: The reason this is required is so that if you later need to add an optional parameter,
// you can do so without breaking existing code.
message EmptyRequest {}

message LivenessResponse {
    string msg = 1;
}

// https://developers.google.com/protocol-buffers/docs/proto3#scalar
message ExchangeRateResponse {
    string title       = 1;
    string pubDate     = 2;
    float  description = 3;
    int32  quant       = 4;
    string index       = 5;
    float  change      = 6;
}

message ExchangeRatesResponse {
    repeated ExchangeRateResponse data = 1;
}

message WeatherRequest {
    double latitude  = 1;
    double longitude = 2;
}

message WeatherResponse {
    double temp     = 1;
    double pressure = 2;
    double humidity = 3;
}