# https://docs.docker.com/compose/compose-file/#dns

###############################################################################
# Docker config
###############################################################################

version: '3'

networks:
  custom_network:
    ipam:
      driver: default
      config:
        - subnet: 192.168.0.0/32

services:
  postgresql:
    image: postgres:latest
    container_name: postgresql
    ports:
      - "5432:5432"
    volumes:
      - ./postgres/init.sql:/docker-entrypoint-initdb.d/init.sql
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=go_restful
    expose:
      - "5432"
    links:
      - postgresql1
      - postgresql2
    depends_on:
      - postgresql1
      - postgresql2
    networks:
      custom_network:
        ipv4_address: 192.168.0.4

  postgresql1:
    image: postgres:latest
    container_name: postgresql1
    ports:
      - "5433:5432"
    volumes:
      - ./postgres_1/init.sql:/docker-entrypoint-initdb.d/init.sql
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=go_restful
    expose:
      - "5432"
    networks:
      custom_network:
        ipv4_address: 192.168.0.5

  postgresql2:
    image: postgres:latest
    container_name: postgresql2
    ports:
      - "5434:5432"
    volumes:
      - ./postgres_2/init.sql:/docker-entrypoint-initdb.d/init.sql
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=go_restful
    expose:
      - "5432"
    networks:
      custom_network:
        ipv4_address: 192.168.0.6

# note: replication work, uncomment if need on hosting, but only not local
#  postgresql_replication_master:
#    image: 'danieldent/postgres-replication'
#    restart: 'always'
#    environment:
#      POSTGRES_USER: 'postgres'
#      POSTGRES_PASSWORD: 'postgres'
#      POSTGRES_DB: 'go_restful'
#      PGDATA: '/var/lib/postgresql/data/pgdata'
#    volumes:
#      - '/var/lib/postgresql/data'
#    expose:
#     - '5432'
#    networks:
#      custom_network:
#        ipv4_address: 192.168.0.13
#
#  postgresql_replication_slave:
#    image: 'danieldent/postgres-replication'
#    restart: 'always'
#    environment:
#      POSTGRES_USER: 'postgres'
#      POSTGRES_PASSWORD: 'postgres'
#      PGDATA: '/var/lib/postgresql/data/pgdata'
#      POSTGRES_DB: 'go_restful'
#      REPLICATE_FROM: 'postgresql_replication_master'
#    volumes:
#      - '/var/lib/postgresql/data'
#    expose:
#     - '5432'
#    links:
#     - 'postgresql_replication_master'
#    networks:
#      custom_network:
#        ipv4_address: 192.168.0.14

  redis:
    image: phpdockerio/redis:latest
    container_name: redis
    ports:
      - "6379:6379"
    command: redis-server --appendonly yes
    volumes:
      - ./redis-data:/data
    networks:
      custom_network:
        ipv4_address: 192.168.0.8

  mongo:
    image: mongo
    container_name: mongo
    ports:
      - "27017:27017"
    networks:
      custom_network:
        ipv4_address: 192.168.0.2

  golang:
    image: zhanat87/golang:latest
    container_name: golang
    links:
      - postgresql
      - redis
      - postgresql_replication_master
      - postgresql_replication_slave
      - golang-grpc-protobuf-server
      - mongo
    depends_on:
      - postgresql
      - redis
      - postgresql_replication_master
      - postgresql_replication_slave
      - golang-grpc-protobuf-server
      - mongo
    ports:
      - "8080:8080"
    networks:
      custom_network:
        ipv4_address: 192.168.0.9

  golang-chat-server:
    image: zhanat87/golang-socketio-server:latest
    container_name: golang-socketio-server
    ports:
      - "5000:5000"
    networks:
      custom_network:
        ipv4_address: 192.168.0.10

  golang-grpc-protobuf-server:
    image: zhanat87/golang-grpc-protobuf-server:latest
    container_name: golang-grpc-protobuf-server
    ports:
      - "50051:50051"
    networks:
      custom_network:
        ipv4_address: 192.168.0.3

  client-nginx:
    image: phpdockerio/nginx:latest
    container_name: client-nginx
    volumes:
      - ../client:/var/www/client-nginx
      - ./client-nginx:/etc/nginx/conf.d
      - ./client-nginx/logs:/var/log/nginx
    ports:
      - "8081:80"
    networks:
      custom_network:
        ipv4_address: 192.168.0.11

  adminer:
    image: hardware/adminer
    container_name: adminer
    ports:
      - "8888:8888"
    links:
      - postgresql
      - postgresql1
      - postgresql2
      - postgresql_replication_master
      - postgresql_replication_slave
    networks:
      custom_network:
        ipv4_address: 192.168.0.12